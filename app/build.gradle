apply plugin: 'com.android.application'

def getVersionTag = { variant ->
    def stdout
    try {
        stdout = new ByteArrayOutputStream()
        exec {
            commandLine "git", "describe", "--match", "${variant}/*", "--long"
            standardOutput = stdout
        }
        def longTag = stdout.toString().trim()

        return longTag.substring(longTag.indexOf('/') + 1, longTag.indexOf('-'))
    } catch (exception) {
        return "0.0.1";
    }
}

def getVersionCode = { tag ->
    def parts = tag.tokenize('.')
    if(parts.size() != 3 || parts[1].length() > 2 || parts[2].length() > 2) {
        throw new RuntimeException("Invalid version tag \"${tag}\", format \"x.y.z\" expected.")
    }
    if(parts[1].length() == 1) {
        parts[1] = "0" + parts[1]
    }
    if(parts[2].length() == 1) {
        parts[2] = "0" + parts[2]
    }
    return Integer.parseInt(parts[0] + parts[1] + parts[2])
}

def getVersionName = { tag ->
    return tag
}

android {
    compileSdkVersion 30
    buildToolsVersion "30.0.2"

    defaultConfig {
        applicationId "com.example.converter"
        minSdkVersion 23
        targetSdkVersion 30
        versionCode generateVersionCode()
        versionName "${majorVersion}.${generateVersionCode()}"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    flavorDimensions 'type'
    productFlavors{
        free{
            applicationId "com.example.ppo_lab1_converter.free"
            dimension 'type'
        }
        paid{
            applicationId "com.example.ppo_lab1_converter.paid"
            dimension 'type'
        }
    }
}

dependencies {
    implementation fileTree(dir: "libs", include: ["*.jar"])
    implementation 'androidx.appcompat:appcompat:1.2.0'
    implementation 'androidx.constraintlayout:constraintlayout:2.0.1'
    implementation 'androidx.lifecycle:lifecycle-extensions:2.2.0'
    testImplementation 'junit:junit:4.12'
    androidTestImplementation 'androidx.test.ext:junit:1.1.2'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.3.0'

}